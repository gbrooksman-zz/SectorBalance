@page "/corehistory"
@inject AppStateContainer state
@inject HttpClient httpClient
@using SectorBalanceClient
@using SectorBalanceShared

    <div>
        <div class="row">
            <h3>Core Model History</h3>
        </div>
        <div class="row">
            <DataGrid Items="@modelVersionList" TItem="UserModel">
                <HeaderTemplate>
                    <th>Version</th>
                    <th>Start Date</th>
                    <th>Stop Date</th>
                    <th>Show</th>
                </HeaderTemplate>
                <RowTemplate>
                    <td>@context.Version</td>
                    <td>@context.StartDate.ToShortDateString()</td>
                    <td>@FormatStopDate(context.StopDate, context.Active)</td>
                    <td>a link</td>
                </RowTemplate>
            </DataGrid>
        </div>
    </div>

@code
{
protected string FormatStopDate(DateTime stopDate, bool isActive)
{
    string ret = stopDate == DateTime.MinValue ? "" : stopDate.ToShortDateString();
    if (string.IsNullOrEmpty(ret) && isActive)
    {
        ret = "(active)";
    }

    return ret;
}

protected string IsActive(bool isActive)
{
    return isActive == true ? "(active)" : "";
}

List<UserModel> modelVersionList = new List<UserModel>();

protected override async Task OnInitAsync()
{
    modelVersionList = await httpClient.GetJsonAsync<List<UserModel>>($"{state.APIUrl}/api/model/getmodelversions?modelId={state.CoreModelId}");
}
}
