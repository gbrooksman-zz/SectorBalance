@page "/coregroup"
@inject AppStateContainer state
@inject HttpClient httpClient
@using SectorBalanceClient
@using SectorBalanceShared
@using SectorBalanceClient.Pages.Components

@*<style type="text/css">
    .small {
        font: 12px sans-serif;
    }

    .normal {
        font: 16px sans-serif;
    }

    .row {
        display: flex;
    }

    .column {
        flex: 50%;
    }
</style>*@

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <h4>Current Core Model</h4>
        </div>
        <div class="col-6" style="text-align:right;">
            <span>Effective Date:@model.StartDate.ToShortDateString()</span>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <ModelEquityGrid ModelEquityList="@modelEquityList" />
        </div>
    </div>
</div>

@code
{
    decimal totalValue = 0;
    decimal totalCost = 0;

    List<ModelEquity> modelEquityList = new List<ModelEquity>();
    UserModel model = new UserModel();

    protected override async Task OnInitAsync()
    {
        model = await httpClient.GetJsonAsync<UserModel>($"{state.APIUrl}/api/model/getmodel?modelId={state.CoreModelId}");

        modelEquityList = await httpClient.GetJsonAsync<List<ModelEquity>>($"{state.APIUrl}/api/quote/getmodelbydate?modelId={state.CoreModelId}&date={DateTime.Now.Date}&versionNumber={model.Version}");

        totalValue = modelEquityList.Sum(q => q.CurrentValue);
        totalCost = modelEquityList.Sum(q => q.Cost);
    }

}
