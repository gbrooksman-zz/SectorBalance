@using SectorBalanceClient
@using SectorBalanceShared
@using Microsoft.AspNetCore.Components


<figure>

    <div class="piechart-main">
        <svg width="84%" height="84%" viewBox="-1 -1 2 2" style="transform: rotate(-90deg);margin-left:8px;margin-top:20px">

            @DrawSlices();

        </svg>
    </div>
    <br />

    <figcaption class="piechart-key">

        <ul class="piechart-key-list" aria-hidden="true" style="list-style-type: none;">
            <li>
                <span class="round-dot dot-red"></span> App Store (40)
            </li>
            <li>
                <span class="round-dot dot-green"></span> Website (20)
            </li>
            <li>
                <span class="round-dot dot-blue"></span> Partners (40)

            </li>
        </ul>

    </figcaption>


</figure>


@code
{
    
    public class Slice
    {
        public double Percent { get; set; }
        public string Color { get; set; }
    }

    public class Point
    {
        public double X { get; set; }
        public double Y { get; set; }
    }
    

    private RenderFragment DrawSlices()
    {
        RenderFragment frag = null;

        Slice slice = new Slice();
        slice.Percent = 12.0f;
        slice.Color = "blue";

        frag = BuildSlice(slice);

        return frag;
    }
    

    RenderFragment BuildSlice(Slice slice ) => builder =>
    {
        builder.OpenElement(1,"path");
        builder.AddAttribute(2, "d", GetPath(slice.Percent));
        builder.AddAttribute(3, "fill", slice.Color);
        builder.CloseElement();
    };

    private string GetPath(double slicePercent)
    {        

        Point startingPoint = new Point();
        startingPoint.X = 0;
        startingPoint.Y = 1;        

        Point endingPoint  = GetCoordinatesForPercent(slicePercent);        

        string slicePath = $"M {startingPoint.X} {startingPoint.Y} A 1 1 0 0 1 {endingPoint.X} {endingPoint.Y} L 0 0";

        return slicePath;        
    }


    private Point GetCoordinatesForPercent(double percent) 
    {
        Point point = new Point();
        point.X = System.Math.Cos(2 * Math.PI * percent);
        point.Y = System.Math.Sin(2 * Math.PI * percent);
        return point;
    }

}